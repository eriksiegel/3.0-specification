<appendix xmlns="http://docbook.org/ns/docbook"
	  xmlns:xlink="http://www.w3.org/1999/xlink"
	  xmlns:xi='http://www.w3.org/2001/XInclude'
          xml:id="uri-globbing"
	  version="5.0-extension w3c-xproc">
<title>URI globbing</title>

<para>A “glob” is a modified form of wildcard expansion designed for
matching paths on a filesystem. <impl>A glob always applies to
<literal>file:</literal> URIs; whether it applies to other URI schemes
is <glossterm>implementation-defined</glossterm>.</impl>
Given a set of absolute URIs, the rules below determine which URIs
match the specified “glob”.
Globs are
applied to the path portion of the absolute URI of each potential
match. Globs can be interpreted like regular expressions with the
following special rules:</para>

<orderedlist>
<listitem>
<para>The characters “<literal>\</literal>”, “<literal>?</literal>”,
“<literal>*</literal>”, and “<literal>[</literal>” are special.
All other characters match exactly and only themselves.
</para>
</listitem>
<listitem>
<para>Globs are always anchored. Any non-special characters at the
start or end of the string must match exactly those characters
<emphasis>at the start or end of the string</emphasis>.
If a string begins or ends with special characters, then the matching
rules for those characters apply to the start or end of the string.
</para>
</listitem>
<listitem>
<para>The character “<literal>\</literal>” escapes the character
that follows it. The character that follows matches exactly and only
itself, regardless of whatever special meaning it would have had
if it had not been preceded by a “<literal>\</literal>”. If a
“<literal>\</literal>” is the very last character of a string, it
is interpreted as “<literal>\\</literal>”.
</para>
</listitem>
<listitem>
<para>The character “<literal>?</literal>” matches any single character
except the path separator character, “<literal>/</literal>”.
</para>
</listitem>
<listitem>
<para>The character “<literal>*</literal>” matches zero or more characters
except the path separator.
</para>
</listitem>
<listitem>
<para>The character sequence “<literal>**</literal>” matches zero or more
characters, <emphasis>including</emphasis> the path separator.
</para>
</listitem>
<listitem>
<para>The character “<literal>[</literal>” begins a range.
The range consists of all of the characters after “<literal>[</literal>” up to but
excluding the first unescaped “<literal>]</literal>” that follows or the end of
the string, whichever comes first. The closing “<literal>]</literal>”, if present,
has no bearing on matches, it simply ends the range. A range matches any single
character that is a member of the range.</para>
<orderedlist>
<listitem>
<para>If the first character of a range is “<literal>^</literal>”, then the range
consists of all of the characters that follow the “<literal>^</literal>” and the
meaning of the range is inverted. It matches all of the characters
<emphasis>not</emphasis> identified by the range.
</para>
</listitem>
<listitem>
<para>If the first or last character of a range is “<literal>-</literal>”, then the
hyphen character is literally part of the range. If a hyphen appears anywhere else
in a range, then it identifies an inclusive character sequence. The sequence begins
with the character that precedes the hyphen and ends with the character that follows
the hyphen. For the purposes of such a hyphen, the characters are ordered by
Unicode code point. If the code point of the beginning character is greater than the
code point of the ending character, then the sequence consists of no characters.
If the same character appears more than once in a range, all of the multiple occurrences
collapse to a single occurrence.
</para>
</listitem>
</orderedlist>
</listitem>
</orderedlist>

<para>Note that the path portion of a URI always begins with a single slash so
most useful globs will have to start with a slash.</para>

<para>Some examples follow. For the purpose of these examples, let’s consider
the following URIs:</para>

<orderedlist>
<listitem>
<simpara><uri>file:///a</uri></simpara>
</listitem>
<listitem>
<simpara><uri>file:///ab</uri></simpara>
</listitem>
<listitem>
<simpara><uri>file:///c.txt</uri></simpara>
</listitem>
<listitem>
<simpara><uri>file:///d/e.txt</uri></simpara>
</listitem>
<listitem>
<simpara><uri>file:///d/f/g.txt</uri></simpara>
</listitem>
<listitem>
<simpara><uri>file:///file0.dat</uri></simpara>
</listitem>
<listitem>
<simpara><uri>file:///fileA.dat</uri></simpara>
</listitem>
<listitem>
<simpara><uri>file:///file-.dat</uri></simpara>
</listitem>
</orderedlist>

<para>And the following globs:</para>

<variablelist>
<varlistentry>
<term><literal>/?</literal></term>
<listitem>
<para>Matches “<literal>file:///a</literal>”, but not “<literal>file:///ab</literal>” or any
other URI.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>/*.txt</literal></term>
<listitem>
<para>Matches only “<literal>file:///c.txt</literal>”.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>/*/*.txt</literal></term>
<listitem>
<para>Matches only “<literal>file:///d/e.txt</literal>”.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>/**.txt</literal></term>
<listitem>
<para>Matches all three “<literal>.txt</literal>” files.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>/d/**/*.txt</literal></term>
<listitem>
<para>Matches only “<literal>file:///d/f/g.txt</literal>” (but would also have
matched “<literal>file:///d/f/h/i/j/k.txt</literal>” had it been present).
</para>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>/*[0-9].dat</literal></term>
<listitem>
<para>Matches only “<literal>file:///file0.dat</literal>”.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>/*[^0-9].dat</literal></term>
<listitem>
<para>Matches “<literal>file:///fileA.dat</literal>” and
“<literal>file:///file-.dat</literal>”.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term><literal>/*[-0-9].dat</literal></term>
<listitem>
<para>Matches “<literal>file:///file0.dat</literal>” and
“<literal>file:///file-.dat</literal>”.
</para>
</listitem>
</varlistentry>
</variablelist>

</appendix>
